import config
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.message import ContentType
from aiogram.utils.markdown import text, bold, italic, code, pre
from aiogram.types import ParseMode
import functions
import keyboard as kb
import pandas
import db

logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.API_TOKEN)
dp = Dispatcher(bot)



@dp.message_handler(commands=['genre'])
async def process_command_1(message: types.Message):
    await message.reply("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∂–∞–Ω—Ä—ã", reply_markup=kb.inline_kb_1)


@dp.callback_query_handler(text_contains='btn')
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    genre = callback_query.data.split(' ')[-1]
    movie = functions.select_genre(genre)
    msg = text(bold(movie.title), f'–û–ø–∏—Å–∞–Ω–∏–µ: {movie.description}...', f'–ì–æ–¥: {movie.year}', f'–°—Ç—Ä–∞–Ω–∞: {movie.country}', f'–ñ–∞–Ω—Ä: {movie.genre}', f'–í—Ä–µ–º—è: {movie.runtime} –º–∏–Ω—É—Ç—ã', f'–†–µ–∂–∏—Å–µ—Ä: {movie.film_director}', f'–ê–∫—Ç–µ—Ä—ã: {movie.cast}', sep='\n')
    await bot.send_photo(callback_query.from_user.id, photo=movie.img_url, parse_mode=ParseMode.MARKDOWN, caption=msg)

@dp.callback_query_handler(text='–°–∫—Ä—ã—Ç—å')
async def cancel(call: types.CallbackQuery):
    await call.message.edit_reply_markup()


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!\n–ò—Å–ø–æ–ª—å–∑—É–π /help, '
                        '—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥!')



@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    msg = text(bold('–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:'),
               '/randommovie - –∫–∏–Ω—å üé≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ —è –≤—ã–±–µ—Ä—É —Ç–µ–±–µ —Ñ–∏–ª—å–º üòä', '/genre - —Ç–æ–ª—å–∫–æ –≤—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É —Ñ–∏–ª—å–º üçø', 
               '–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ –ø–æ–ª—É—á–∏ –æ–ø–∏—Å–∞–Ω–∏–µüé¨ –ò–ª–∏ –∏–º–µ–Ω–∞ –∞–∫—Ç—ë—Ä–æ–≤, —Ä–µ–∂–∏—Å—Å—ë—Ä–æ–≤, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é', sep='\n')
    await message.reply(msg, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(content_types=ContentType.DICE)
@dp.message_handler(commands=['randommovie'])
async def process_start_command(message: types.Message):
    movie = functions.search_random_movie()
    print("RANDOM!!!", movie.title)
    msg = text(bold(movie.title), f'–û–ø–∏—Å–∞–Ω–∏–µ: {movie.description}...', f'–ì–æ–¥: {movie.year}', f'–°—Ç—Ä–∞–Ω–∞: {movie.country}', f'–ñ–∞–Ω—Ä: {movie.genre}', f'–í—Ä–µ–º—è: {movie.runtime} –º–∏–Ω—É—Ç—ã', f'–†–µ–∂–∏—Å–µ—Ä: {movie.film_director}', f'–ê–∫—Ç–µ—Ä—ã: {movie.cast}', sep='\n')
    await bot.send_photo(chat_id=message.from_user.id, photo=movie.img_url, parse_mode=ParseMode.MARKDOWN, caption=msg)


@dp.message_handler()
async def echo_message(message: types.Message):
    if message.text:
        db.add_message(
            user_id=message.from_user.id,
            text=message.text,
            time=message.date,
            name=message.chat.first_name)
    try:
        movies, length, titles = functions.find(message.text)
        if length > 0:
            if length > 5:
                k = 5
            else:
                k = length
            for i in range(k):
                movie = movies.iloc[i]
                msg = text(bold(movie.title), f'–û–ø–∏—Å–∞–Ω–∏–µ: {movie.description}...', f'–ì–æ–¥: {movie.year}', f'–°—Ç—Ä–∞–Ω–∞: {movie.country}', f'–ñ–∞–Ω—Ä: {movie.genre}', f'–í—Ä–µ–º—è: {movie.runtime} –º–∏–Ω—É—Ç—ã', f'–†–µ–∂–∏—Å–µ—Ä: {movie.film_director}', f'–ê–∫—Ç–µ—Ä—ã: {movie.cast}', sep='\n')
                await bot.send_photo(chat_id=message.from_user.id, photo=movie.img_url, parse_mode=ParseMode.MARKDOWN, caption=msg)
        if length > 5:
            if length > 50:
                length = 50
            await bot.send_message(message.from_user.id, bold('–Ø —Ç–∞–∫–∂–µ –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:'), parse_mode=ParseMode.MARKDOWN)
            for i in range(5, length):
                await bot.send_message(message.from_user.id, titles.iloc[i])
        if length == 0:
            await bot.send_message(message.from_user.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è üòåüòåüòå')
    except:
        await bot.send_message(message.from_user.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è üòåüòåüòå')
   




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)




